name: Dagger Pipeline
on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pkg: ["browser", "inputs"]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Install deps
        run: pnpm install --frozen-lockfile
      - name: Run Dagger pipeline
        run: node --loader ts-node/esm ./pipeline/build.mts
        env:
          PKG: ${{ matrix.pkg }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-image--${{ matrix.pkg }}.tar
          path: build-image--${{ matrix.pkg }}.tar
  test:
    name: test
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        pkg: ["browser", "inputs"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build-image--${{ matrix.pkg }}.tar
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Install deps
        run: pnpm install --frozen-lockfile
      - name: Run Dagger pipeline
        run: node --loader ts-node/esm ./pipeline/test.mts
        env:
          PKG: ${{ matrix.pkg }}
          EV_TEAM_UUID: ${{ secrets.TESTS_TEAM_UUID }}
          EV_APP_UUID: ${{ secrets.TESTS_APP_UUID }}
          EV_DECRYPT_FN_KEY: ${{ secrets.TESTS_DECRYPT_FN_KEY }}
